---
  - name: 卸载可能与 mysql 冲突的包
    yum:
      name: '{{item}}'
      state: absent
    loop:
      - 'mysql-community*'

  - name: 删除 /data/mysql
    file:
      path: '/data/mysql'
      state: absent

  - name: 安装 mysql 及其依赖
    shell: yum localinstall -y {{paths.MySQLDir}}/mysql-community*.rpm

  - name: 创建 /data/mysql
    file:
      path: '{{item}}'
      state: directory
      owner: mysql
      group: mysql
    with_items:
      - /data/mysql
      - /data/mysql/data
      - /data/mysql/binlog
      - /data/mysql/log
      - /data/mysql/tmp

  - name: 删除 /var/lib/mysql/ib_logfile0
    file:
      path: '/var/lib/mysql/ib_logfile0'
      state: absent

  - name: 删除 /var/lib/mysql/ib_logfile1
    file:
      path: '/var/lib/mysql/ib_logfile1'
      state: absent

  # 备份 /etc/my.cnf
  - name: 判断 /etc/my.cnf 是否存在
    stat:
      path: /etc/my.cnf
    register: mysql_config

  - name: 备份 /etc/my.cnf
    command: mv /etc/my.cnf /etc/my_bak.cnf
    when: mysql_config.stat.exists

  # 复制新 my.cnf 到 /etc 下
  - name: 复制新 my.cnf 到 /etc 下
    command: cp '{{paths.MySQLConfDir}}/my.cnf' /etc/

  - name: 修改 /etc/my.cnf 权限为 644
    file:
      path: /etc/my.cnf
      mode: '0644'

  - name: 启动 mysql server
    command: systemctl start mysqld

  - name: 获取 mysql 初始密码
    shell: "grep 'temporary password' /data/mysql/log/mysqld.err | tail -n 1 | grep -P 'root@localhost: .+' -o | sed 's/root@localhost: //g'"
    register: mysql_pwd

  - name: 保存 mysql 初始密码
    shell: echo "{{mysql_pwd.stdout}}" > /tmp/mp

  - name: 设置 mysql root 用户密码
    shell: mysql -uroot  -p'{{mysql_pwd.stdout}}' --connect-expired-password  -e 'alter user "root"@"localhost" identified by "{{password.mysql}}"'
    ignore_errors: yes

  - name: 启动 mysql server
    command: systemctl start mysqld

  - name: 安装python-mysql模块
    yum:
      name: MySQL-python
      state: present


  # 构建 CDH 集群组件数据库
  - name: 创建 ambari 数据库
    mysql_db:
      login_user: root
      login_password: "{{password.mysql}}"
      name: ambari
      encoding: utf8
      #login_unix_socket: /tmp/mysql.sock
      state: present

  - name: 创建 hive 数据库
    mysql_db:
      login_user: root
      login_password: "{{password.mysql}}"
      name: hive
      encoding: utf8
      #login_unix_socket: /tmp/mysql.sock
      state: present

  - name: 创建 hue 数据库
    mysql_db:
      login_user: root
      login_password: "{{password.mysql}}"
      name: hue
      encoding: utf8
      #login_unix_socket: /tmp/mysql.sock
      state: present

  - name: 创建 hive 数据库
    mysql_db:
      login_user: root
      login_password: "{{password.mysql}}"
      name: hive
      encoding: utf8
      #login_unix_socket: /tmp/mysql.sock
      state: present

  - name: 创建 navms 数据库
    mysql_db:
      login_user: root
      login_password: "{{password.mysql}}"
      name: navms
      encoding: utf8
      #login_unix_socket: /tmp/mysql.sock
      state: present

  # 改密码设置用户权限
  - name: 开放 ambari 库下所有表的权限给 ambari 用户
    mysql_user:
      login_user: root
      login_password: "{{password.mysql}}"
      name: ambari
      password: "{{password.ambari}}"
      #login_unix_socket: /tmp/mysql.sock
      priv: 'ambari.*:ALL'
      host: '%'
      state: present

  - name: 开放 hive 库下所有表的权限给 hive 用户
    mysql_user:
      login_user: root
      login_password: "{{password.mysql}}"
      name: hive
      password: "{{password.hive}}"
      #login_unix_socket: /tmp/mysql.sock
      priv: 'hive.*:ALL'
      host: '%'
      state: present

  - name: 开放 hue 库下所有表的权限给 hue 用户
    mysql_user:
      login_user: root
      login_password: "{{password.mysql}}"
      name: hue
      password: "{{password.hue}}"
      #login_unix_socket: /tmp/mysql.sock
      priv: 'hue.*:ALL'
      host: '%'
      state: present
